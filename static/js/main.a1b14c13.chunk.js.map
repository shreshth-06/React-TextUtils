{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","Fragment","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","heading","backgroundColor","value","onChange","event","target","rows","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","extraText","split","join","length","defaultProps","aboutText","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.a1b14c13.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n\r\n  return (\r\n    props.alert && (\r\n      <>\r\n        <div\r\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n          role=\"alert\"\r\n        >\r\n          <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n        </div>\r\n      </>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          {/* <Link className=\"navbar-brand\" to=\"/\">\r\n            {props.title}\r\n          </Link> */}\r\n\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                  Home\r\n                </Link> */}\r\n\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link\" to=\"/about\">\r\n                  {props.aboutText}\r\n                </Link> */}\r\n\r\n                {/* <a className=\"nav-link\" href=\"/about\">\r\n                  {props.aboutText}\r\n                </a> */}\r\n              </li>\r\n            </ul>\r\n            {/* <form classNameName=\"d-flex\">\r\n              <input\r\n                classNameName=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button classNameName=\"btn btn-primary\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form> */}\r\n\r\n            <div\r\n              className={`form-check form-switch text-${\r\n                props.mode === \"light\" ? \"dark\" : \"light\"\r\n              }`}\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                onClick={props.toggleMode}\r\n                type=\"checkbox\"\r\n                role=\"switch\"\r\n                id=\"flexSwitchCheckDefault\"\r\n              />\r\n              <label\r\n                className=\"form-check-label\"\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                Enable Darkmode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = { title: \"Set title here\", aboutText: \"About text here\" };\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    // console.log(\"uppercase was clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\" Converted to uppercase\", \"success\");\r\n  };\r\n\r\n  const handleLoClick = () => {\r\n    // console.log(\"uppercase was clicked\" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\" Converted to lowercase\", \"success\");\r\n  };\r\n\r\n  const clearText = () => {\r\n    // console.log(\"uppercase was clicked\" + text);\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\" Text has been cleared\", \"success\");\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    let text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\" Text copied to clipboard\", \"success\");\r\n  };\r\n\r\n  const handleExtraSpaces = () => {\r\n    let extraText = text.split(/[ ]+/);\r\n    setText(extraText.join(\" \"));\r\n    props.showAlert(\" Extra spaces removed\", \"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"on change\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n        }}\r\n      >\r\n        <h1>{props.heading}</h1>\r\n\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n            }}\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            id=\"myBox\"\r\n            rows=\"10\"\r\n          ></textarea>\r\n        </div>\r\n\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>\r\n          Convert to Uppercase\r\n        </button>\r\n\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>\r\n          Convert to Lowercase\r\n        </button>\r\n\r\n        <button className=\"btn btn-primary mx-2\" onClick={clearText}>\r\n          Clear Text\r\n        </button>\r\n\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>\r\n          Copy Text\r\n        </button>\r\n\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>\r\n          Remove Extra Spaces\r\n        </button>\r\n      </div>\r\n\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n        }}\r\n      >\r\n        <h2>Your text summary</h2>\r\n        <p>\r\n          {text.split(\" \").length} words and {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes to read</p>\r\n        <h2>Preview</h2>\r\n        <p>\r\n          {text.length > 0\r\n            ? text\r\n            : \"Enter something in the text box above to preview it here\"}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Alert from \"./components/Alert\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); // Whether dark mode is active or not\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"rgb(31 2 38 / 98%)\";\n      showAlert(\" Dark mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\" Light mode has been enabled\", \"success\");\n    }\n  };\n\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar\n        title=\"TextUtils\"\n        aboutText=\"About Us\"\n        mode={mode}\n        toggleMode={toggleMode}\n      />\n\n      <Alert alert={alert} />\n\n      <div className=\"container my-3\">\n        {/* <Switch>\n            <Route exact path=\"/about\">\n              <About /> */}\n        {/* </Route> */}\n\n        {/* <Route exact path=\"/\"> */}\n        <TextForm\n          showAlert={showAlert}\n          heading=\"Enter the text to analyze\"\n          mode={mode}\n        />\n        {/* </Route>\n          </Switch>\n        //\n      </Router> */}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}